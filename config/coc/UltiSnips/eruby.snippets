extends html
priority -50

snippet % "<% $0 %>" i
<% $0 %>
endsnippet

snippet = "<%= $0 %>" i
<%= $0 %>
endsnippet

###########################################################################
#            GENERATED FROM get_tm_snippets.py + REGEX REPLACE            #
###########################################################################

snippet fi "<%= Fixtures.identify(:symbol) %>"
<%= Fixtures.identify(:${1:name}) %>$0
endsnippet

snippet ft "form_tag" w
<% form_tag(${1::action => '${2:update}'}${3:, ${4:${5:class} => '${6:form}'\}}}) do %>
	$0
`!p textmate_var('TM_RAILS_TEMPLATE_END_RUBY_BLOCK', snip)`
endsnippet

snippet ffs "form_for submit 2" w
<%= ${1:f}.submit '${2:Submit}'${3:, :disable_with => '${4:$2ing...}'} %>
endsnippet

snippet f. "f_fields_for (nff)" w
<% f.fields_for :${1:attribute} do |${2:f}| %>
	$0
`!p textmate_var('TM_RAILS_TEMPLATE_END_RUBY_BLOCK', snip)`
endsnippet

snippet f. "f.checkbox" w
<%= f.check_box :${1:attribute} %>
endsnippet

snippet f. "f.file_field" w
<%= f.file_field :${1:attribute} %>
endsnippet

snippet f. "f.hidden_field" w
<%= f.hidden_field :${1:attribute} %>
endsnippet

snippet f. "f.label" w
<%= f.label :${1:attribute}${2:, "${3:${1/[[:alpha:]]+|(_)/(?1: :\u$0)/g}}"} %>
endsnippet

snippet f. "f.password_field" w
<%= f.password_field :${1:attribute} %>
endsnippet

snippet f. "f.radio_button" w
<%= f.radio_button :${1:attribute}, :${2:tag_value} %>
endsnippet

snippet f. "f.submit" w
<%= f.submit "${1:Submit}"${2:, :disable_with => '${3:$1ing...}'} %>
endsnippet

snippet f. "f.text_area" w
<%= f.text_area :${1:attribute} %>
endsnippet

snippet f. "f.text_field" w
<%= f.text_field :${1:attribute} %>
endsnippet

snippet ffe "form_for with errors" w
<%= error_messages_for :${1:model} %>

<%= form_for @${2:$1} do |f| %>
	$0
`!p textmate_var('TM_RAILS_TEMPLATE_END_RUBY_BLOCK', snip)`
endsnippet

snippet ff "form_for" w
<%= form_for @${1:model} do |f| %>
	$0
`!p textmate_var('TM_RAILS_TEMPLATE_END_RUBY_BLOCK', snip)`
endsnippet

snippet ist "image_submit_tag" w
<%= image_submit_tag("${1:agree.png}"${2:${3:, :id => "${4:${1/^(\w+)(\.\w*)?$/$1/}}"}${5:, :name => "${6:${1/^(\w+)(\.\w*)?$/$1/}}"}${7:, :class => "${8:${1/^(\w+)(\.\w*)?$/$1/}-button}"}${9:, :disabled => ${10:false}}}) %>
endsnippet

snippet it "image_tag" w
<%= image_tag "$1${2:.png}"${3:${4:, :title => "${5:title}"}${6:, :class => "${7:class}"}} %>
endsnippet

snippet layout "layout"
layout "${1:template_name}"${2:${3:, :only => ${4:[:${5:action}, :${6:action}]}}${7:, :except => ${8:[:${9:action}, :${10:action}]}}}
endsnippet

snippet jit "javascript_include_tag" w
<%= javascript_include_tag ${1::all}${2:, :cache => ${3:true}} %>
endsnippet

snippet lt "link_to (name, dest)" w
<%= link_to "${1:link text...}", ${2:dest} %>
endsnippet

snippet lia "link_to (action)" w
<%= link_to "${1:link text...}", :action => "${2:index}" %>
endsnippet

snippet liai "link_to (action, id)" w
<%= link_to "${1:link text...}", :action => "${2:edit}", :id => ${3:@item} %>
endsnippet

snippet lic "link_to (controller)" w
<%= link_to "${1:link text...}", :controller => "${2:items}" %>
endsnippet

snippet lica "link_to (controller, action)" w
<%= link_to "${1:link text...}", :controller => "${2:items}", :action => "${3:index}" %>
endsnippet

snippet licai "link_to (controller, action, id)" w
<%= link_to "${1:link text...}", :controller => "${2:items}", :action => "${3:edit}", :id => ${4:@item} %>
endsnippet

snippet linpp "link_to (nested path plural)" w
<%= link_to ${1:"${2:link text...}"}, ${3:${10:parent}_${11:child}_path(${12:@}${13:$10})} %>
endsnippet

snippet linp "link_to (nested path)" w
<%= link_to ${1:"${2:link text...}"}, ${3:${12:parent}_${13:child}_path(${14:@}${15:$12}, ${16:@}${17:$13})} %>
endsnippet

snippet lipp "link_to (path plural)" w
<%= link_to ${1:"${2:link text...}"}, ${3:${4:model}s_path} %>
endsnippet

snippet lip "link_to (path)" w
<%= link_to ${1:"${2:link text...}"}, ${3:${12:model}_path(${13:@}${14:$12})} %>
endsnippet

snippet lim "link_to model" w
<%= link_to ${1:model}.${2:name}, ${3:${4:$1}_path(${14:$1})} %>
endsnippet

snippet hide "page.hide (*ids)"
page.hide ${1:"${2:id(s)}"}
endsnippet

snippet ins "page.insert_html (position, id, partial)"
page.insert_html :${1:top}, ${2:"${3:id}"}, :${4:partial => "${5:template}"}
endsnippet

snippet rep "page.replace (id, partial)"
page.replace ${1:"${2:id}"}, :${3:partial => "${4:template}"}
endsnippet

snippet reph "page.replace_html (id, partial)"
page.replace_html ${1:"${2:id}"}, :${3:partial => "${4:template}"}
endsnippet

snippet show "page.show (*ids)"
page.show ${1:"${2:id(s)}"}
endsnippet

snippet tog "page.toggle (*ids)"
page.toggle ${1:"${2:id(s)}"}
endsnippet

snippet vis "page.visual_effect (effect, id)"
page.visual_effect :${1:toggle_slide}, ${2:"${3:DOM ID}"}
endsnippet

snippet rp "render (partial) (rp)"
render :partial => "${1:item}"
endsnippet

snippet rpc "render (partial,collection) (rpc)"
render :partial => "${1:item}", :collection => ${2:@$1s}
endsnippet

snippet rpl "render (partial,locals) (rpl)"
render :partial => "${1:item}", :locals => { :${2:$1} => ${3:@$1}$0 }
endsnippet

snippet rpo "render (partial,object) (rpo)"
render :partial => "${1:item}", :object => ${2:@$1}
endsnippet

snippet rps "render (partial,status) (rps)"
render :partial => "${1:item}", :status => ${2:500}
endsnippet

snippet slt "stylesheet_link_tag" w
<%= stylesheet_link_tag ${1::all}${2:, :cache => ${3:true}} %>
endsnippet

snippet st "submit_tag" w
<%= submit_tag "${1:Save changes}"${2:, :id => "${3:submit}"}${4:, :name => "${5:$3}"}${6:, :class => "${7:form_$3}"}${8:, :disabled => ${9:false}}${10:, :disable_with => "${11:Please wait...}"} %>
endsnippet

snippet else "else (ERB)"
<% else %>
	$0
endsnippet

snippet lf "link_to_function"
<%= link_to_function ${1:"${2:Greeting}"}, "${3:alert('Hello world!')}"$4 %>
endsnippet

# vim:ft=snippets:
